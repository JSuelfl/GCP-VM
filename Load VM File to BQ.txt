Create Schema File (use example below):
[
{"name": "rownum", "type": "STRING", "mode": "nullable"},
{"name": "TXN_ROUTING_TRANSIT", "type": "STRING", "mode": "nullable"},
{"name": "DEBIT_CREDIT_INDICATOR", "type": "STRING", "mode": "nullable"},
{"name": "Bank", "type": "STRING", "mode": "nullable"},
{"name": "AccountID", "type": "STRING", "mode": "nullable"},
{"name": "Amount", "type": "STRING", "mode": "nullable"},
{"name": "ON_US_INDICATOR", "type": "STRING", "mode": "nullable"},
{"name": "COMPANY_NAME", "type": "STRING", "mode": "nullable"},
{"name": "DATE_POSTED", "type": "STRING", "mode": "nullable"},
{"name": "City_State_Zip", "type": "STRING", "mode": "nullable"},
{"name": "ATM_FLAG", "type": "STRING", "mode": "nullable"},
{"name": "RDCFLAG", "type": "STRING", "mode": "nullable"}
]
Making a new table in the BQ UI requires a file upload or a job to pull a file across from the cloud storage
Creating a file at the command line does not and is preferred.
$ bq mk mydataset


See Step 3 from the following link:
https://cloud.google.com/bigquery/bq-command-line-tool-quickstart?hl=en

Command Line used and work as a test:
bq datasetname.tablename   path/filenametoload   path/schemafile
example
bq load JPKTest.Test2 largetrnsjpk.csv /home/test_bmohb03/TestSchemaSetup.txt

The following bq load will allow_jagged_rows (rows with incorrect number of columns based on the schema/table) and skip the header record (skip_leading_rows):
             bq load --allow_jagged_rows=True --skip_leading_rows=1 JPKTest.Test3 largetrnsjpk.csv /home/test_bmohb03/TestSchemaSetup.txt
Translation: bq load --incorrect cols in file --skip header row     dataset.table filename         location of schema file
Note:  You will need a database created within BQ, but not a table.  The statement creates the table for you (Example: JPKTest.Test3 was not created prior to execution).

Additional arguments/flags for bq load can be found using the following statment within VM:
    bq load --help
